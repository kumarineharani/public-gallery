{"version":3,"sources":["components/authfrom.js","components/upload.js","components/gallery.js","App.js","reportWebVitals.js","index.js"],"names":["AuthForm","_ref","setIsAuthenticated","isLogin","setIsLogin","useState","username","setUsername","password","setPassword","message","setMessage","React","createElement","style","padding","border","borderRadius","color","marginBottom","onSubmit","async","e","preventDefault","response","axios","post","localStorage","setItem","data","token","error","type","placeholder","value","onChange","target","required","width","backgroundColor","cursor","onClick","toggleMode","marginTop","Upload","file","setFile","files","formData","FormData","append","alert","console","Gallery","images","setImages","useEffect","get","then","res","catch","err","length","className","map","img","index","key","src","concat","url","alt","App","isAuthenticated","removeItem","height","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c0528393.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AuthForm({ setIsAuthenticated }) {\r\n  const [isLogin, setIsLogin] = useState(true); // true = login mode, false = sign up mode\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Toggle between login and sign-up modes\r\n  const toggleMode = () => {\r\n    setIsLogin(!isLogin);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n\r\n    if (isLogin) {\r\n      // Login mode\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/auth/login\", {\r\n          username,\r\n          password,\r\n        });\r\n        localStorage.setItem(\"authToken\", response.data.token);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        setMessage(\"Login failed. Please check your credentials.\");\r\n      }\r\n    } else {\r\n      // Sign up mode\r\n      try {\r\n        await axios.post(\"http://localhost:5000/auth/register\", {\r\n          username,\r\n          password,\r\n        });\r\n        setMessage(\"Sign up successful! Please log in.\");\r\n        setIsLogin(true); // Switch to login mode after successful sign up\r\n      } catch (error) {\r\n        setMessage(\"Sign up failed. Username might already be in use.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", border: \"1px solid #ccc\", borderRadius: \"5px\" }}>\r\n      <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\r\n      {message && <div style={{ color: \"red\", marginBottom: \"10px\" }}>{message}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n          style={{ padding: \"8px\", marginBottom: \"10px\", width: \"100%\" }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{ padding: \"8px\", marginBottom: \"10px\", width: \"100%\" }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            padding: \"10px 15px\",\r\n            backgroundColor: \"#4CAF50\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {isLogin ? \"Login\" : \"Sign Up\"}\r\n        </button>\r\n      </form>\r\n      <button\r\n        onClick={toggleMode}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          padding: \"5px 10px\",\r\n          backgroundColor: \"#ddd\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        {isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"; // Ensure React is imported\r\nimport axios from \"axios\";\r\n\r\nexport default function Upload() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/image/upload\", formData);\r\n      alert(\"Image Uploaded!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n      alert(\"Failed to upload image\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Image</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\"; // Import React and hooks\r\nimport axios from \"axios\"; // Import axios\r\nconst Gallery = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  // Fetch images from the server when the component mounts\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/image/images\")\r\n      .then((res) => setImages(res.data)) // Set images from the response\r\n      .catch((err) => console.error(\"Error fetching images:\", err)); // Error handling\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gallery Component</h1> {/* Component title */}\r\n      <h2>Public Image Gallery</h2> {/* Subheading */}\r\n      {images.length === 0 ? (  // Check if images are loaded\r\n        <p>No images found.</p>  // Show message if no images\r\n      ) : (\r\n        <div className=\"image-gallery\">\r\n          {images.map((img, index) => (\r\n            <img\r\n              key={index}\r\n              src={`http://localhost:5000${img.url}`}  // Assuming the img.url returns the image path\r\n              alt={`Uploaded ${index + 1}`}  // Descriptive alt text\r\n              width=\"200px\"\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AuthForm from \"./components/authfrom\";\nimport Upload from \"./components/upload\";\nimport Gallery from \"./components/gallery\";\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    localStorage.removeItem(\"authToken\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* Display the logo */}\n        <img src= \"/p.jpg\" alt=\"logo \" width=\"300\" height=\"150\" style={{ borderRadius: \"10px\" }} />\n        \n        <h1>Image Uploader & Public Gallery</h1>\n        {!isAuthenticated ? (\n          <AuthForm setIsAuthenticated={setIsAuthenticated} />\n        ) : (\n          <>\n            <Upload />\n            <Gallery />\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}